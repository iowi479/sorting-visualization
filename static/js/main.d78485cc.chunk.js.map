{"version":3,"sources":["components/Bar.js","components/ArrayVisualization.js","App.js","components/Button.js","components/Nametag.js","components/SpeedButton.js","components/StopButton.js","components/HeadMenu.js","utils/generateRandomArray.js","utils/sleep.js","algorithms/selectionSort.js","algorithms/bubbleSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","reportWebVitals.js","index.js"],"names":["Bar","backgroundColor","value","color","amount","relHeight","maxValue","relWidth","margin","className","style","height","width","marginLeft","marginRight","defaultProps","ArrayVisualization","array","colors","length","map","i","animationDelay","setAnimationDelay","abortAlgorithm","setAbortAlgorithm","Button","text","size","onClick","flex","Nametag","SpeedButton","speed","fontSize","StopButton","HeadMenu","isRunning","onRandomArray","onSelectionSort","onBubbleSort","onMergeSort","onQuickSort","onAnimationDelayChange","onArraySizeChange","onStopAnimation","Typography","id","gutterBottom","Slider","disabled","defaultValue","min","max","aria-labelledby","step","valueLabelDisplay","marks","label","onChange","event","randomInt","Math","floor","random","generateRandomArray","generatedArray","push","sleep","ms","Promise","resolve","setTimeout","selectionSort","setArray","setColors","a","j","newColors","Array","fill","k","console","log","last","bubbleSort","noSwaps","curr","next","mergeSort","lo","hi","m","merge","mi","start","lo2","index","quickSort","end","partition","pivot","temp","App","useState","arraySize","setArraysize","setIsRunning","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d78485cc.chunk.js","sourcesContent":["const Bar = ({ value, color, amount, maxValue }) => {\r\n  const relHeight = 100 * (value / maxValue);\r\n  const relWidth = (100 / amount) * (3 / 4);\r\n  const margin = (100 / amount) * (1 / 8);\r\n\r\n  let backgroundColor;\r\n  switch (color) {\r\n    case 0:\r\n      backgroundColor = \"cornflowerblue\";\r\n      break;\r\n\r\n    case 1:\r\n      backgroundColor = \"crimson\";\r\n      break;\r\n\r\n    case 2:\r\n      backgroundColor = \"forestgreen\";\r\n      break;\r\n\r\n    case 3:\r\n      backgroundColor = \"gold\";\r\n      break;\r\n\r\n    default:\r\n      backgroundColor = \"white\";\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"Bar\"\r\n      style={{\r\n        height: `${relHeight}%`,\r\n        width: `${relWidth}%`,\r\n        marginLeft: `${margin}%`,\r\n        marginRight: `${margin}%`,\r\n        backgroundColor: `${backgroundColor}`,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nBar.defaultProps = {\r\n  value: 0,\r\n  color: 0,\r\n  amount: 0,\r\n  maxValue: 200,\r\n};\r\n\r\nexport default Bar;\r\n","import Bar from \"./Bar\";\r\n\r\nconst ArrayVisualization = ({ array, colors }) => {\r\n  const length = array.length;\r\n  return (\r\n    <div className=\"ArrayVisualization\">\r\n      {array.map((value, i) => (\r\n        <Bar key={i} value={value} color={colors[i]} amount={length} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nArrayVisualization.defaultProps = {\r\n  array: [],\r\n  colors: [],\r\n};\r\n\r\nexport default ArrayVisualization;\r\n","import { useState } from \"react\";\nimport ArrayVisualization from \"./components/ArrayVisualization\";\nimport HeadMenu from \"./components/HeadMenu\";\nimport generateRandomArray from \"./utils/generateRandomArray\";\nimport selectionSort from \"./algorithms/selectionSort\";\nimport bubbleSort from \"./algorithms/bubbleSort\";\nimport mergeSort from \"./algorithms/mergeSort\";\nimport quickSort from \"./algorithms/quickSort\";\n\n// Is needed for Async Algorithms\nexport let animationDelay;\nlet setAnimationDelay;\nexport let abortAlgorithm;\nlet setAbortAlgorithm;\n\nconst App = () => {\n  const min = 1,\n    max = 200;\n\n  [animationDelay, setAnimationDelay] = useState(5);\n  const [arraySize, setArraysize] = useState(50);\n  const [array, setArray] = useState(generateRandomArray(arraySize, min, max));\n  const [colors, setColors] = useState(new Array(arraySize).fill(0));\n  const [isRunning, setIsRunning] = useState(false);\n  [abortAlgorithm, setAbortAlgorithm] = useState(false);\n\n  const onRandomArray = () => {\n    if (!isRunning) {\n      setArray(generateRandomArray(arraySize, min, max));\n      setColors(new Array(arraySize).fill(0));\n    }\n  };\n\n  const onArraySizeChange = async (size) => {\n    if (!isRunning) {\n      setArraysize(size);\n      onRandomArray();\n    }\n  };\n\n  const onAnimationDelayChange = () => {\n    if (animationDelay === 5) {\n      setAnimationDelay(100);\n    } else if (animationDelay === 100) {\n      setAnimationDelay(5);\n    }\n  };\n\n  const onStopAnimation = async () => {\n    await setAbortAlgorithm(true);\n    setColors(new Array(arraySize).fill(0));\n  };\n\n  const onSelectionSort = async () => {\n    if (!isRunning) {\n      setIsRunning(true);\n      await setAbortAlgorithm(false);\n      await setColors(new Array(arraySize).fill(0));\n      await selectionSort([...array], setArray, setColors);\n      setIsRunning(false);\n    }\n  };\n\n  const onBubbleSort = async () => {\n    if (!isRunning) {\n      setIsRunning(true);\n      await setAbortAlgorithm(false);\n      await setColors(new Array(arraySize).fill(0));\n      await bubbleSort([...array], setArray, setColors);\n      setIsRunning(false);\n    }\n  };\n\n  const onMergeSort = async () => {\n    if (!isRunning) {\n      setIsRunning(true);\n      await setAbortAlgorithm(false);\n      await setColors(new Array(arraySize).fill(0));\n      await mergeSort([...array], setArray, [...colors], setColors);\n      setIsRunning(false);\n    }\n  };\n\n  const onQuickSort = async () => {\n    if (!isRunning) {\n      setIsRunning(true);\n      await setAbortAlgorithm(false);\n      await setColors(new Array(arraySize).fill(0));\n      await quickSort([...array], setArray, [...colors], setColors);\n      setIsRunning(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <HeadMenu\n        isRunning={isRunning}\n        animationDelay={animationDelay}\n        onRandomArray={onRandomArray}\n        onSelectionSort={onSelectionSort}\n        onBubbleSort={onBubbleSort}\n        onMergeSort={onMergeSort}\n        onQuickSort={onQuickSort}\n        onAnimationDelayChange={onAnimationDelayChange}\n        onArraySizeChange={onArraySizeChange}\n        onStopAnimation={onStopAnimation}\n      />\n      <ArrayVisualization array={array} colors={colors} className=\"UiElement\" />\n    </div>\n  );\n};\n\nexport default App;\n","const Button = ({ text, size, onClick }) => {\r\n  return (\r\n    <div className=\"Button\" onClick={onClick} style={{ width: `${size}%` }}>\r\n      <p style={{ flex: 1 }} onClick={onClick}>\r\n        {text}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const Nametag = ({ text, size }) => {\r\n  return (\r\n    <div className=\"Nametag\" style={{ width: `${size}%` }}>\r\n      <p style={{ flex: 1 }}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nametag;\r\n","import PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\r\n\r\nconst SpeedButton = ({ speed, onClick }) => {\r\n  return (\r\n    <div className=\"Button\" onClick={onClick}>\r\n      {speed === 5 ? (\r\n        <FastForwardIcon style={{ fontSize: 40 }} />\r\n      ) : speed === 100 ? (\r\n        <PlayArrowIcon style={{ fontSize: 40 }} />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeedButton;\r\n","import StopIcon from \"@material-ui/icons/Stop\";\r\n\r\nconst StopButton = ({ onClick }) => {\r\n  return (\r\n    <div className=\"Button\" onClick={onClick}>\r\n      {<StopIcon style={{ fontSize: 40 }} onClick={onClick} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StopButton;\r\n","import Button from \"./Button\";\r\nimport NameTag from \"./Nametag\";\r\nimport SpeedButton from \"./SpeedButton\";\r\nimport StopButton from \"./StopButton\";\r\nimport { Slider, Typography } from \"@material-ui/core\";\r\n\r\nconst HeadMenu = ({\r\n  isRunning,\r\n  animationDelay,\r\n  onRandomArray,\r\n  onSelectionSort,\r\n  onBubbleSort,\r\n  onMergeSort,\r\n  onQuickSort,\r\n  onAnimationDelayChange,\r\n  onArraySizeChange,\r\n  onStopAnimation,\r\n}) => {\r\n  return (\r\n    <div className=\"HeadMenu\">\r\n      <div style={{ width: \"10%\" }}></div>\r\n      <div style={{ width: \"10%\" }}>\r\n        <div className=\"SpeedContainer\">\r\n          <SpeedButton\r\n            className=\"SpeedContainerItem\"\r\n            speed={animationDelay}\r\n            onClick={onAnimationDelayChange}\r\n          />\r\n          <StopButton\r\n            className=\"SpeedContainerItem\"\r\n            onClick={onStopAnimation}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ width: \"10%\" }}></div>\r\n\r\n      <Button size={10} text={\"random Array\"} onClick={onRandomArray} />\r\n\r\n      <div style={{ width: \"5%\" }}></div>\r\n\r\n      <div style={{ width: \"20%\" }}>\r\n        <Typography\r\n          style={{ width: \"100%\" }}\r\n          className=\"LabelArraySizeSlider\"\r\n          id=\"discrete-slider-small-steps\"\r\n          gutterBottom\r\n        >\r\n          Array Size\r\n        </Typography>\r\n\r\n        <Slider\r\n          className=\"ArraySizeSlider\"\r\n          disabled={isRunning}\r\n          defaultValue={50}\r\n          min={10}\r\n          max={200}\r\n          aria-labelledby=\"discrete-slider-custom\"\r\n          step={10}\r\n          valueLabelDisplay=\"auto\"\r\n          marks={[\r\n            {\r\n              value: 10,\r\n              label: \"10\",\r\n            },\r\n            {\r\n              value: 50,\r\n              label: \"50\",\r\n            },\r\n            {\r\n              value: 100,\r\n              label: \"100\",\r\n            },\r\n            {\r\n              value: 150,\r\n              label: \"150\",\r\n            },\r\n            {\r\n              value: 200,\r\n              label: \"200\",\r\n            },\r\n          ]}\r\n          onChange={(event, value) => {\r\n            onArraySizeChange(value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ width: \"10%\" }}></div>\r\n\r\n      <div style={{ width: \"10%\" }}></div>\r\n\r\n      <Button size={10} text={\"Selectionsort\"} onClick={onSelectionSort} />\r\n      <Button size={10} text={\"Bubblesort\"} onClick={onBubbleSort} />\r\n      <Button size={10} text={\"Mergesort\"} onClick={onMergeSort} />\r\n      <Button size={10} text={\"Quicksort\"} onClick={onQuickSort} />\r\n\r\n      <div style={{ width: \"10%\" }}></div>\r\n\r\n      <NameTag size={10} text={\"Simon Schindler\"} />\r\n\r\n      <div style={{ width: \"5%\" }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeadMenu;\r\n","const randomInt = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n};\r\n\r\nconst generateRandomArray = (size, min, max) => {\r\n  const generatedArray = [];\r\n  for (let i = 0; i < size; i++) {\r\n    generatedArray.push(randomInt(min, max));\r\n  }\r\n  return generatedArray;\r\n};\r\n\r\nexport default generateRandomArray;\r\n","const sleep = (ms) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve()\r\n        }, ms)\r\n    });\r\n}\r\n\r\nexport default sleep;","import sleep from \"../utils/sleep\";\r\nimport { animationDelay, abortAlgorithm } from \"../App\";\r\n\r\nconst selectionSort = async (array, setArray, setColors) => {\r\n  // arraycopy\r\n  array = [...array];\r\n  const length = array.length;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    let max = 0;\r\n    let maxValue = 0;\r\n\r\n    for (let j = 0; j < length - i; j++) {\r\n      const newColors = new Array(length - 1).fill(0);\r\n      newColors[max] = 3;\r\n      newColors[j] = 1;\r\n      for (let k = length - 1; k > length - 1 - i; k--) {\r\n        newColors[k] = 2;\r\n      }\r\n      setColors(newColors);\r\n      await sleep(animationDelay);\r\n      if (abortAlgorithm) return;\r\n      console.log(abortAlgorithm);\r\n\r\n      if (maxValue <= array[j]) {\r\n        maxValue = array[j];\r\n        max = j;\r\n      }\r\n    }\r\n\r\n    let last = length - 1 - i;\r\n    array[max] = array[last];\r\n    array[last] = maxValue;\r\n\r\n    array = [...array];\r\n    setArray(array);\r\n  }\r\n\r\n  const newColors = new Array(length).fill(2);\r\n  setColors(newColors);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n};\r\n\r\nexport default selectionSort;\r\n","import sleep from \"../utils/sleep\";\r\nimport { animationDelay, abortAlgorithm } from \"../App\";\r\n\r\nconst bubbleSort = async (array, setArray, setColors) => {\r\n  let length = array.length;\r\n  array = [...array];\r\n  let noSwaps = true;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    noSwaps = true;\r\n    for (let j = 0; j < length - i - 1; j++) {\r\n      const curr = array[j];\r\n      const next = array[j + 1];\r\n\r\n      const newColors = new Array(length).fill(0);\r\n      for (let k = length - 1; k > length - i - 1; k--) {\r\n        newColors[k] = 2;\r\n      }\r\n      newColors[j] = 1;\r\n      newColors[j + 1] = 1;\r\n      setColors(newColors);\r\n      await sleep(animationDelay);\r\n      if (abortAlgorithm) return;\r\n\r\n      if (curr > next) {\r\n        array[j] = next;\r\n        array[j + 1] = curr;\r\n        noSwaps = false;\r\n      }\r\n      setArray(array);\r\n    }\r\n    if (noSwaps) {\r\n      i = length - 1;\r\n    }\r\n    const newColors = new Array(length).fill(0);\r\n    for (let k = length - 1; k >= length - i - 1; k--) {\r\n      newColors[k] = 2;\r\n    }\r\n    setColors(newColors);\r\n    setArray(array);\r\n    console.log(i);\r\n  }\r\n};\r\n\r\nexport default bubbleSort;\r\n","import sleep from \"../utils/sleep\";\r\nimport { animationDelay, abortAlgorithm } from \"../App\";\r\n\r\nconst mergeSort = async (\r\n  array,\r\n  setArray,\r\n  colors,\r\n  setColors,\r\n  lo = 0,\r\n  hi = array.length - 1\r\n) => {\r\n  if (lo < hi) {\r\n    let m = Math.floor((lo + hi) / 2);\r\n\r\n    for (let i = lo; i <= hi; i++) {\r\n      colors[i] = 0;\r\n    }\r\n    if (abortAlgorithm) return;\r\n    await mergeSort(array, setArray, colors, setColors, lo, m);\r\n    if (abortAlgorithm) return;\r\n    for (let i = lo; i <= m; i++) {\r\n      colors[i] = 0;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n\r\n    await mergeSort(array, setArray, colors, setColors, m + 1, hi);\r\n    if (abortAlgorithm) return;\r\n    for (let i = m + 1; i <= hi; i++) {\r\n      colors[i] = 0;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n\r\n    await merge(array, setArray, colors, setColors, lo, m, hi);\r\n    if (abortAlgorithm) return;\r\n    for (let i = lo; i <= hi; i++) {\r\n      colors[i] = 2;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n  }\r\n};\r\n\r\nconst merge = async (array, setArray, colors, setColors, lo, mi, hi) => {\r\n  const start = lo;\r\n  let lo2 = mi + 1;\r\n\r\n  if (abortAlgorithm) return;\r\n\r\n  if (array[mi] <= array[lo2]) {\r\n    // Everything sorted\r\n    for (let i = lo; i <= hi; i++) {\r\n      colors[i] = 2;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n    return;\r\n  }\r\n\r\n  while (lo <= mi && lo2 <= hi) {\r\n    if (array[lo] <= array[lo2]) {\r\n      lo++;\r\n      for (let i = start; i <= hi; i++) {\r\n        if (i !== array.length - 1 && (i === lo || i === lo2)) {\r\n          colors[i] = 1;\r\n        } else if (i < lo) {\r\n          colors[i] = 2;\r\n        } else {\r\n          colors[i] = 0;\r\n        }\r\n      }\r\n      setColors([...colors]);\r\n      await sleep(animationDelay);\r\n      if (abortAlgorithm) return;\r\n    } else {\r\n      let value = array[lo2];\r\n      let index = lo2;\r\n\r\n      while (index !== lo) {\r\n        array[index] = array[index - 1];\r\n        index--;\r\n        if (abortAlgorithm) return;\r\n      }\r\n      array[lo] = value;\r\n\r\n      lo++;\r\n      mi++;\r\n      lo2++;\r\n\r\n      setArray([...array]);\r\n      for (let i = start; i <= hi; i++) {\r\n        if (i !== array.length - 1 && (i === lo || i === lo2)) {\r\n          colors[i] = 1;\r\n        } else if (i < lo) {\r\n          colors[i] = 2;\r\n        } else {\r\n          colors[i] = 0;\r\n        }\r\n      }\r\n      setColors([...colors]);\r\n      await sleep(animationDelay);\r\n      if (abortAlgorithm) return;\r\n    }\r\n  }\r\n};\r\n\r\nexport default mergeSort;\r\n","import sleep from \"../utils/sleep\";\r\nimport { animationDelay, abortAlgorithm } from \"../App\";\r\n\r\nconst quickSort = async (\r\n  array,\r\n  setArray,\r\n  colors,\r\n  setColors,\r\n  start = 0,\r\n  end = array.length - 1\r\n) => {\r\n  if (abortAlgorithm) return;\r\n  if (start < end) {\r\n    let index = await partition(array, setArray, colors, setColors, start, end);\r\n\r\n    if (abortAlgorithm) return;\r\n\r\n    await quickSort(array, setArray, colors, setColors, start, index - 1);\r\n\r\n    for (let i = start; i <= index; i++) {\r\n      colors[i] = 2;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n\r\n    await quickSort(array, setArray, colors, setColors, index + 1, end);\r\n\r\n    for (let i = start; i <= end; i++) {\r\n      colors[i] = 2;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n  }\r\n};\r\n\r\nconst partition = async (\r\n  array,\r\n  setArray,\r\n  colors,\r\n  setColors,\r\n  start = 0,\r\n  end = array.length - 1\r\n) => {\r\n  let i = start - 1;\r\n  let pivot = array[end];\r\n  colors[end] = 3;\r\n  setColors([...colors]);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n\r\n  for (let j = start; j < end; j++) {\r\n    for (let k = start; k < end; k++) {\r\n      colors[k] = 0;\r\n    }\r\n    if (i !== start - 1) {\r\n      colors[i] = 1;\r\n    }\r\n    colors[j] = 1;\r\n    colors[end] = 3;\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n    if (array[j] <= pivot) {\r\n      i++;\r\n\r\n      for (let k = start; k < end; k++) {\r\n        colors[k] = 0;\r\n      }\r\n      colors[i] = 0;\r\n      colors[j] = 1;\r\n      colors[end] = 3;\r\n      setColors([...colors]);\r\n      await sleep(animationDelay);\r\n      if (abortAlgorithm) return;\r\n\r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n      await setArray([...array]);\r\n      if (abortAlgorithm) return;\r\n    }\r\n  }\r\n\r\n  let temp = array[i + 1];\r\n  array[i + 1] = array[end];\r\n  array[end] = temp;\r\n  await setArray([...array]);\r\n  //clear colors\r\n  for (let i = start; i <= end; i++) {\r\n    colors[i] = 0;\r\n  }\r\n  setColors([...colors]);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n  return i + 1;\r\n};\r\nexport default quickSort;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}