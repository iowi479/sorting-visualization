{"version":3,"sources":["components/Bar.js","components/ArrayVisualization.js","App.js","components/Button.js","components/Nametag.js","components/SpeedButton.js","components/StopButton.js","components/HeadMenu.js","utils/generateRandomArray.js","utils/sleep.js","algorithms/selectionSort.js","algorithms/bubbleSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","algorithms/heapSort.js","reportWebVitals.js","index.js"],"names":["Bar","backgroundColor","value","color","amount","relHeight","maxValue","relWidth","margin","className","style","height","width","marginLeft","marginRight","defaultProps","ArrayVisualization","array","colors","length","map","i","animationDelay","setAnimationDelay","abortAlgorithm","setAbortAlgorithm","Button","text","size","onClick","flex","Nametag","SpeedButton","speed","fontSize","StopButton","HeadMenu","isRunning","onRandomArray","onSelectionSort","onBubbleSort","onMergeSort","onQuickSort","onHeapSort","onAnimationDelayChange","onArraySizeChange","onStopAnimation","Typography","id","gutterBottom","Slider","disabled","defaultValue","min","max","aria-labelledby","step","valueLabelDisplay","marks","label","onChange","event","randomInt","Math","floor","random","generateRandomArray","generatedArray","push","sleep","ms","Promise","resolve","setTimeout","selectionSort","setArray","setColors","a","j","newColors","Array","fill","k","console","log","last","bubbleSort","noSwaps","curr","next","mergeSort","lo","hi","m","merge","mi","start","lo2","index","quickSort","end","partition","pivot","temp","heapSort","heapRoot","swap","i1","i2","App","useState","arraySize","setArraysize","setIsRunning","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba758ce9.chunk.js","sourcesContent":["const Bar = ({ value, color, amount, maxValue }) => {\r\n  const relHeight = 100 * (value / maxValue);\r\n  const relWidth = (100 / amount) * (3 / 4);\r\n  const margin = (100 / amount) * (1 / 8);\r\n\r\n  let backgroundColor;\r\n  switch (color) {\r\n    case 0:\r\n      backgroundColor = \"cornflowerblue\";\r\n      break;\r\n\r\n    case 1:\r\n      backgroundColor = \"crimson\";\r\n      break;\r\n\r\n    case 2:\r\n      backgroundColor = \"forestgreen\";\r\n      break;\r\n\r\n    case 3:\r\n      backgroundColor = \"gold\";\r\n      break;\r\n\r\n    default:\r\n      backgroundColor = \"white\";\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"Bar\"\r\n      style={{\r\n        height: `${relHeight}%`,\r\n        width: `${relWidth}%`,\r\n        marginLeft: `${margin}%`,\r\n        marginRight: `${margin}%`,\r\n        backgroundColor: `${backgroundColor}`,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nBar.defaultProps = {\r\n  value: 0,\r\n  color: 0,\r\n  amount: 0,\r\n  maxValue: 200,\r\n};\r\n\r\nexport default Bar;\r\n","import Bar from \"./Bar\";\r\n\r\nconst ArrayVisualization = ({ array, colors }) => {\r\n  const length = array.length;\r\n  return (\r\n    <div className=\"ArrayVisualization\">\r\n      {array.map((value, i) => (\r\n        <Bar key={i} value={value} color={colors[i]} amount={length} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nArrayVisualization.defaultProps = {\r\n  array: [],\r\n  colors: [],\r\n};\r\n\r\nexport default ArrayVisualization;\r\n","import { useState } from \"react\";\nimport ArrayVisualization from \"./components/ArrayVisualization\";\nimport HeadMenu from \"./components/HeadMenu\";\nimport generateRandomArray from \"./utils/generateRandomArray\";\nimport selectionSort from \"./algorithms/selectionSort\";\nimport bubbleSort from \"./algorithms/bubbleSort\";\nimport mergeSort from \"./algorithms/mergeSort\";\nimport quickSort from \"./algorithms/quickSort\";\nimport heapSort from \"./algorithms/heapSort\";\n\n// Is needed for Async Algorithms\nexport let animationDelay;\nlet setAnimationDelay;\nexport let abortAlgorithm;\nlet setAbortAlgorithm;\n\nconst App = () => {\n  const min = 1,\n    max = 200;\n\n  [animationDelay, setAnimationDelay] = useState(5);\n  const [arraySize, setArraysize] = useState(50);\n  const [array, setArray] = useState(generateRandomArray(arraySize, min, max));\n  const [colors, setColors] = useState(new Array(arraySize).fill(0));\n  const [isRunning, setIsRunning] = useState(false);\n  [abortAlgorithm, setAbortAlgorithm] = useState(false);\n\n  const onRandomArray = () => {\n    if (!isRunning) {\n      setArray(generateRandomArray(arraySize, min, max));\n      setColors(new Array(arraySize).fill(0));\n    }\n  };\n\n  const onArraySizeChange = async (size) => {\n    if (!isRunning) {\n      setArraysize(size);\n      onRandomArray();\n    }\n  };\n\n  const onAnimationDelayChange = () => {\n    if (animationDelay === 5) {\n      setAnimationDelay(100);\n    } else if (animationDelay === 100) {\n      setAnimationDelay(5);\n    }\n  };\n\n  const onStopAnimation = async () => {\n    await setAbortAlgorithm(true);\n    setColors(new Array(arraySize).fill(0));\n  };\n\n  const onSelectionSort = async () => {\n    if (!isRunning) {\n      setIsRunning(true);\n      await setAbortAlgorithm(false);\n      await setColors(new Array(arraySize).fill(0));\n      await selectionSort([...array], setArray, setColors);\n      setIsRunning(false);\n    }\n  };\n\n  const onBubbleSort = async () => {\n    if (!isRunning) {\n      setIsRunning(true);\n      await setAbortAlgorithm(false);\n      await setColors(new Array(arraySize).fill(0));\n      await bubbleSort([...array], setArray, setColors);\n      setIsRunning(false);\n    }\n  };\n\n  const onMergeSort = async () => {\n    if (!isRunning) {\n      setIsRunning(true);\n      await setAbortAlgorithm(false);\n      await setColors(new Array(arraySize).fill(0));\n      await mergeSort([...array], setArray, [...colors], setColors);\n      setIsRunning(false);\n    }\n  };\n\n  const onQuickSort = async () => {\n    if (!isRunning) {\n      setIsRunning(true);\n      await setAbortAlgorithm(false);\n      await setColors(new Array(arraySize).fill(0));\n      await quickSort([...array], setArray, [...colors], setColors);\n      setIsRunning(false);\n    }\n  };\n\n  const onHeapSort = async () => {\n    if (!isRunning) {\n      setIsRunning(true);\n      await setAbortAlgorithm(false);\n      await setColors(new Array(arraySize).fill(0));\n      await heapSort([...array], setArray, [...colors], setColors);\n      setIsRunning(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <HeadMenu\n        isRunning={isRunning}\n        animationDelay={animationDelay}\n        onRandomArray={onRandomArray}\n        onSelectionSort={onSelectionSort}\n        onBubbleSort={onBubbleSort}\n        onMergeSort={onMergeSort}\n        onQuickSort={onQuickSort}\n        onHeapSort={onHeapSort}\n        onAnimationDelayChange={onAnimationDelayChange}\n        onArraySizeChange={onArraySizeChange}\n        onStopAnimation={onStopAnimation}\n      />\n      <ArrayVisualization array={array} colors={colors} className=\"UiElement\" />\n    </div>\n  );\n};\n\nexport default App;\n","const Button = ({ text, size, onClick }) => {\r\n  return (\r\n    <div className=\"Button\" onClick={onClick} style={{ width: `${size}%` }}>\r\n      <p style={{ flex: 1 }} onClick={onClick}>\r\n        {text}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const Nametag = ({ text, size }) => {\r\n  return (\r\n    <div className=\"Nametag\" style={{ width: `${size}%` }}>\r\n      <p style={{ flex: 1 }}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nametag;\r\n","import PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\r\n\r\nconst SpeedButton = ({ speed, onClick }) => {\r\n  return (\r\n    <div className=\"Button\" onClick={onClick}>\r\n      {speed === 5 ? (\r\n        <FastForwardIcon style={{ fontSize: 40 }} />\r\n      ) : speed === 100 ? (\r\n        <PlayArrowIcon style={{ fontSize: 40 }} />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeedButton;\r\n","import StopIcon from \"@material-ui/icons/Stop\";\r\n\r\nconst StopButton = ({ onClick }) => {\r\n  return (\r\n    <div className=\"Button\" onClick={onClick}>\r\n      {<StopIcon style={{ fontSize: 40 }} onClick={onClick} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StopButton;\r\n","import Button from \"./Button\";\r\nimport NameTag from \"./Nametag\";\r\nimport SpeedButton from \"./SpeedButton\";\r\nimport StopButton from \"./StopButton\";\r\nimport { Slider, Typography } from \"@material-ui/core\";\r\n\r\nconst HeadMenu = ({\r\n  isRunning,\r\n  animationDelay,\r\n  onRandomArray,\r\n  onSelectionSort,\r\n  onBubbleSort,\r\n  onMergeSort,\r\n  onQuickSort,\r\n  onHeapSort,\r\n  onAnimationDelayChange,\r\n  onArraySizeChange,\r\n  onStopAnimation,\r\n}) => {\r\n  return (\r\n    <div className=\"HeadMenu\">\r\n      <div style={{ width: \"10%\" }}></div>\r\n      <div style={{ width: \"10%\" }}>\r\n        <div className=\"SpeedContainer\">\r\n          <SpeedButton\r\n            className=\"SpeedContainerItem\"\r\n            speed={animationDelay}\r\n            onClick={onAnimationDelayChange}\r\n          />\r\n          <StopButton\r\n            className=\"SpeedContainerItem\"\r\n            onClick={onStopAnimation}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ width: \"10%\" }}></div>\r\n\r\n      <Button size={10} text={\"random Array\"} onClick={onRandomArray} />\r\n\r\n      <div style={{ width: \"5%\" }}></div>\r\n\r\n      <div style={{ width: \"20%\" }}>\r\n        <Typography\r\n          style={{ width: \"100%\" }}\r\n          className=\"LabelArraySizeSlider\"\r\n          id=\"discrete-slider-small-steps\"\r\n          gutterBottom\r\n        >\r\n          Array Size\r\n        </Typography>\r\n\r\n        <Slider\r\n          className=\"ArraySizeSlider\"\r\n          disabled={isRunning}\r\n          defaultValue={50}\r\n          min={10}\r\n          max={200}\r\n          aria-labelledby=\"discrete-slider-custom\"\r\n          step={10}\r\n          valueLabelDisplay=\"auto\"\r\n          marks={[\r\n            {\r\n              value: 10,\r\n              label: \"10\",\r\n            },\r\n            {\r\n              value: 50,\r\n              label: \"50\",\r\n            },\r\n            {\r\n              value: 100,\r\n              label: \"100\",\r\n            },\r\n            {\r\n              value: 150,\r\n              label: \"150\",\r\n            },\r\n            {\r\n              value: 200,\r\n              label: \"200\",\r\n            },\r\n          ]}\r\n          onChange={(event, value) => {\r\n            onArraySizeChange(value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ width: \"10%\" }}></div>\r\n\r\n      <div style={{ width: \"10%\" }}></div>\r\n\r\n      <Button size={10} text={\"Selectionsort\"} onClick={onSelectionSort} />\r\n      <Button size={10} text={\"Bubblesort\"} onClick={onBubbleSort} />\r\n      <Button size={10} text={\"Mergesort\"} onClick={onMergeSort} />\r\n      <Button size={10} text={\"Quicksort\"} onClick={onQuickSort} />\r\n      <Button size={10} text={\"HeapSort\"} onClick={onHeapSort} />\r\n\r\n      <div style={{ width: \"10%\" }}></div>\r\n\r\n      <NameTag size={10} text={\"Simon Schindler\"} />\r\n\r\n      <div style={{ width: \"5%\" }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeadMenu;\r\n","const randomInt = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n};\r\n\r\nconst generateRandomArray = (size, min, max) => {\r\n  const generatedArray = [];\r\n  for (let i = 0; i < size; i++) {\r\n    generatedArray.push(randomInt(min, max));\r\n  }\r\n  return generatedArray;\r\n};\r\n\r\nexport default generateRandomArray;\r\n","const sleep = (ms) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve()\r\n        }, ms)\r\n    });\r\n}\r\n\r\nexport default sleep;","import sleep from \"../utils/sleep\";\r\nimport { animationDelay, abortAlgorithm } from \"../App\";\r\n\r\nconst selectionSort = async (array, setArray, setColors) => {\r\n  // arraycopy\r\n  array = [...array];\r\n  const length = array.length;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    let max = 0;\r\n    let maxValue = 0;\r\n\r\n    for (let j = 0; j < length - i; j++) {\r\n      const newColors = new Array(length - 1).fill(0);\r\n      newColors[max] = 3;\r\n      newColors[j] = 1;\r\n      for (let k = length - 1; k > length - 1 - i; k--) {\r\n        newColors[k] = 2;\r\n      }\r\n      setColors(newColors);\r\n      await sleep(animationDelay);\r\n      if (abortAlgorithm) return;\r\n      console.log(abortAlgorithm);\r\n\r\n      if (maxValue <= array[j]) {\r\n        maxValue = array[j];\r\n        max = j;\r\n      }\r\n    }\r\n\r\n    let last = length - 1 - i;\r\n    array[max] = array[last];\r\n    array[last] = maxValue;\r\n\r\n    array = [...array];\r\n    setArray(array);\r\n  }\r\n\r\n  const newColors = new Array(length).fill(2);\r\n  setColors(newColors);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n};\r\n\r\nexport default selectionSort;\r\n","import sleep from \"../utils/sleep\";\r\nimport { animationDelay, abortAlgorithm } from \"../App\";\r\n\r\nconst bubbleSort = async (array, setArray, setColors) => {\r\n  let length = array.length;\r\n  array = [...array];\r\n  let noSwaps = true;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    noSwaps = true;\r\n    for (let j = 0; j < length - i - 1; j++) {\r\n      const curr = array[j];\r\n      const next = array[j + 1];\r\n\r\n      const newColors = new Array(length).fill(0);\r\n      for (let k = length - 1; k > length - i - 1; k--) {\r\n        newColors[k] = 2;\r\n      }\r\n      newColors[j] = 1;\r\n      newColors[j + 1] = 1;\r\n      setColors(newColors);\r\n      await sleep(animationDelay);\r\n      if (abortAlgorithm) return;\r\n\r\n      if (curr > next) {\r\n        array[j] = next;\r\n        array[j + 1] = curr;\r\n        noSwaps = false;\r\n      }\r\n      setArray(array);\r\n    }\r\n    if (noSwaps) {\r\n      i = length - 1;\r\n    }\r\n    const newColors = new Array(length).fill(0);\r\n    for (let k = length - 1; k >= length - i - 1; k--) {\r\n      newColors[k] = 2;\r\n    }\r\n    setColors(newColors);\r\n    setArray(array);\r\n    console.log(i);\r\n  }\r\n};\r\n\r\nexport default bubbleSort;\r\n","import sleep from \"../utils/sleep\";\r\nimport { animationDelay, abortAlgorithm } from \"../App\";\r\n\r\nconst mergeSort = async (\r\n  array,\r\n  setArray,\r\n  colors,\r\n  setColors,\r\n  lo = 0,\r\n  hi = array.length - 1\r\n) => {\r\n  if (lo < hi) {\r\n    let m = Math.floor((lo + hi) / 2);\r\n\r\n    for (let i = lo; i <= hi; i++) {\r\n      colors[i] = 0;\r\n    }\r\n    if (abortAlgorithm) return;\r\n    await mergeSort(array, setArray, colors, setColors, lo, m);\r\n    if (abortAlgorithm) return;\r\n    for (let i = lo; i <= m; i++) {\r\n      colors[i] = 0;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n\r\n    await mergeSort(array, setArray, colors, setColors, m + 1, hi);\r\n    if (abortAlgorithm) return;\r\n    for (let i = m + 1; i <= hi; i++) {\r\n      colors[i] = 0;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n\r\n    await merge(array, setArray, colors, setColors, lo, m, hi);\r\n    if (abortAlgorithm) return;\r\n    for (let i = lo; i <= hi; i++) {\r\n      colors[i] = 2;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n  }\r\n};\r\n\r\nconst merge = async (array, setArray, colors, setColors, lo, mi, hi) => {\r\n  const start = lo;\r\n  let lo2 = mi + 1;\r\n\r\n  if (abortAlgorithm) return;\r\n\r\n  if (array[mi] <= array[lo2]) {\r\n    // Everything sorted\r\n    for (let i = lo; i <= hi; i++) {\r\n      colors[i] = 2;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n    return;\r\n  }\r\n\r\n  while (lo <= mi && lo2 <= hi) {\r\n    if (array[lo] <= array[lo2]) {\r\n      lo++;\r\n      for (let i = start; i <= hi; i++) {\r\n        if (i !== array.length - 1 && (i === lo || i === lo2)) {\r\n          colors[i] = 1;\r\n        } else if (i < lo) {\r\n          colors[i] = 2;\r\n        } else {\r\n          colors[i] = 0;\r\n        }\r\n      }\r\n      setColors([...colors]);\r\n      await sleep(animationDelay);\r\n      if (abortAlgorithm) return;\r\n    } else {\r\n      let value = array[lo2];\r\n      let index = lo2;\r\n\r\n      while (index !== lo) {\r\n        array[index] = array[index - 1];\r\n        index--;\r\n        if (abortAlgorithm) return;\r\n      }\r\n      array[lo] = value;\r\n\r\n      lo++;\r\n      mi++;\r\n      lo2++;\r\n\r\n      setArray([...array]);\r\n      for (let i = start; i <= hi; i++) {\r\n        if (i !== array.length - 1 && (i === lo || i === lo2)) {\r\n          colors[i] = 1;\r\n        } else if (i < lo) {\r\n          colors[i] = 2;\r\n        } else {\r\n          colors[i] = 0;\r\n        }\r\n      }\r\n      setColors([...colors]);\r\n      await sleep(animationDelay);\r\n      if (abortAlgorithm) return;\r\n    }\r\n  }\r\n};\r\n\r\nexport default mergeSort;\r\n","import sleep from \"../utils/sleep\";\r\nimport { animationDelay, abortAlgorithm } from \"../App\";\r\n\r\nconst quickSort = async (\r\n  array,\r\n  setArray,\r\n  colors,\r\n  setColors,\r\n  start = 0,\r\n  end = array.length - 1\r\n) => {\r\n  if (abortAlgorithm) return;\r\n  if (start < end) {\r\n    let index = await partition(array, setArray, colors, setColors, start, end);\r\n\r\n    if (abortAlgorithm) return;\r\n\r\n    await quickSort(array, setArray, colors, setColors, start, index - 1);\r\n\r\n    for (let i = start; i <= index; i++) {\r\n      colors[i] = 2;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n\r\n    await quickSort(array, setArray, colors, setColors, index + 1, end);\r\n\r\n    for (let i = start; i <= end; i++) {\r\n      colors[i] = 2;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n  }\r\n};\r\n\r\nconst partition = async (\r\n  array,\r\n  setArray,\r\n  colors,\r\n  setColors,\r\n  start = 0,\r\n  end = array.length - 1\r\n) => {\r\n  let i = start - 1;\r\n  let pivot = array[end];\r\n  colors[end] = 3;\r\n  setColors([...colors]);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n\r\n  for (let j = start; j < end; j++) {\r\n    for (let k = start; k < end; k++) {\r\n      colors[k] = 0;\r\n    }\r\n    if (i !== start - 1) {\r\n      colors[i] = 1;\r\n    }\r\n    colors[j] = 1;\r\n    colors[end] = 3;\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n    if (array[j] <= pivot) {\r\n      i++;\r\n\r\n      for (let k = start; k < end; k++) {\r\n        colors[k] = 0;\r\n      }\r\n      colors[i] = 0;\r\n      colors[j] = 1;\r\n      colors[end] = 3;\r\n      setColors([...colors]);\r\n      await sleep(animationDelay);\r\n      if (abortAlgorithm) return;\r\n\r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n      await setArray([...array]);\r\n      if (abortAlgorithm) return;\r\n    }\r\n  }\r\n\r\n  let temp = array[i + 1];\r\n  array[i + 1] = array[end];\r\n  array[end] = temp;\r\n  await setArray([...array]);\r\n  //clear colors\r\n  for (let i = start; i <= end; i++) {\r\n    colors[i] = 0;\r\n  }\r\n  setColors([...colors]);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n  return i + 1;\r\n};\r\nexport default quickSort;\r\n","import sleep from \"../utils/sleep\";\r\nimport { animationDelay, abortAlgorithm } from \"../App\";\r\n\r\nconst heapSort = async (array, setArray, colors, setColors) => {\r\n  if (abortAlgorithm) return;\r\n  const length = array.length;\r\n\r\n  for (let i = Math.floor(length / 2 - 1); i >= 0; i--) {\r\n    await heapRoot(array, setArray, colors, setColors, length, i);\r\n    if (abortAlgorithm) return;\r\n  }\r\n\r\n  for (let i = length - 1; i > 0; i--) {\r\n    await swap(array, setArray, colors, setColors, 0, i);\r\n    if (abortAlgorithm) return;\r\n\r\n    for (let j = length; j >= i; j--) {\r\n      colors[j] = 2;\r\n    }\r\n    setColors([...colors]);\r\n    await sleep(animationDelay);\r\n    if (abortAlgorithm) return;\r\n\r\n    await heapRoot(array, setArray, colors, setColors, i, 0);\r\n    if (abortAlgorithm) return;\r\n  }\r\n\r\n  for (let j = length; j >= 0; j--) {\r\n    colors[j] = 2;\r\n  }\r\n  setColors([...colors]);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n};\r\n\r\nconst heapRoot = async (array, setArray, colors, setColors, length, i) => {\r\n  if (abortAlgorithm) return;\r\n  let lo = 2 * i + 1;\r\n  let hi = 2 * i + 2;\r\n  let max = i;\r\n\r\n  colors[lo] = colors[lo] === 2 ? 2 : 1;\r\n  colors[max] = colors[max] === 2 ? 2 : 1;\r\n  setColors([...colors]);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n\r\n  if (lo < length && array[lo] > array[max]) {\r\n    colors[max] = 0;\r\n    max = lo;\r\n  }\r\n\r\n  colors[lo] = colors[lo] === 2 ? 2 : 0;\r\n  colors[hi] = colors[hi] === 2 ? 2 : 1;\r\n  colors[max] = colors[max] === 2 ? 2 : 1;\r\n  setColors([...colors]);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n\r\n  if (hi < length && array[hi] > array[max]) {\r\n    colors[max] = 0;\r\n    max = hi;\r\n  }\r\n\r\n  colors[hi] = colors[hi] === 2 ? 2 : 0;\r\n  colors[max] = colors[max] === 2 ? 2 : 0;\r\n  setColors([...colors]);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n\r\n  if (max != i) {\r\n    await swap(array, setArray, colors, setColors, i, max);\r\n    await heapRoot(array, setArray, colors, setColors, length, max);\r\n  }\r\n};\r\n\r\nconst swap = async (array, setArray, colors, setColors, i1, i2) => {\r\n  if (abortAlgorithm) return;\r\n  colors[i1] = 1;\r\n  colors[i2] = 1;\r\n  setColors([...colors]);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n\r\n  const temp = array[i1];\r\n  array[i1] = array[i2];\r\n  array[i2] = temp;\r\n\r\n  setArray([...array]);\r\n  colors[i1] = 0;\r\n  colors[i2] = 0;\r\n  setColors([...colors]);\r\n  await sleep(animationDelay);\r\n  if (abortAlgorithm) return;\r\n};\r\n\r\nexport default heapSort;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}